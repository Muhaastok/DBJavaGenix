#!/usr/bin/env node
/**
 * DBJavaGenix MCP Server Entry Point
 * ‰ΩúËÄÖ: ZXP (2638265504@qq.com)
 * Áî®‰∫éCherry StudioÁ≠âMCPÂÆ¢Êà∑Á´ØÁöÑÊ†áÂáÜÂåñÂÖ•Âè£
 */

const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

const projectDir = __dirname;
const srcDir = path.join(projectDir, 'src');

console.log('DBJavaGenix MCP Server v0.1.0');
console.log('üöÄ Starting server in stdio mode...');
console.log(`üìÅ Project: ${projectDir}`);
console.log(`üìÇ Source: ${srcDir}`);

// È™åËØÅÈ°πÁõÆÁªìÊûÑ
if (!fs.existsSync(srcDir)) {
  console.error('‚ùå Error: Source directory not found');
  console.error(`Expected: ${srcDir}`);
  process.exit(1);
}

if (!fs.existsSync(path.join(srcDir, 'dbjavagenix'))) {
  console.error('‚ùå Error: dbjavagenix module not found');
  console.error(`Expected: ${path.join(srcDir, 'dbjavagenix')}`);
  process.exit(1);
}

// ÂêØÂä®Python MCPÊúçÂä°Âô®
const python = spawn('python', ['-m', 'dbjavagenix.cli', 'server'], {
  cwd: projectDir,
  env: {
    ...process.env,
    PYTHONPATH: srcDir
  },
  stdio: 'inherit'
});

python.on('error', (err) => {
  console.error('‚ùå Failed to start Python MCP server:', err.message);
  console.error('üí° Make sure Python is installed and available in PATH');
  console.error('üí° Make sure dbjavagenix module is properly installed');
  process.exit(1);
});

python.on('close', (code) => {
  if (code !== 0) {
    console.error(`‚ùå Python process exited with code ${code}`);
  }
  process.exit(code);
});

// ‰ºòÈõÖÂÖ≥Èó≠Â§ÑÁêÜ
process.on('SIGINT', () => {
  console.log('\nüõë Received SIGINT, shutting down...');
  python.kill('SIGINT');
});

process.on('SIGTERM', () => {
  console.log('\nüõë Received SIGTERM, shutting down...');
  python.kill('SIGTERM');
});

process.on('uncaughtException', (err) => {
  console.error('‚ùå Uncaught exception:', err);
  python.kill('SIGTERM');
  process.exit(1);
});