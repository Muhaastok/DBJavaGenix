<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="{{daoPackage}}.{{className}}Dao">

    <resultMap type="{{entityPackage}}.{{className}}" id="{{className}}Map">
{{#columns}}
        <result property="{{javaName}}" column="{{name}}" jdbcType="{{jdbcType}}"/>
{{/columns}}
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="{{className}}Map">
        select
{{#columns}}
          {{name}}{{#hasNext}},{{/hasNext}}
{{/columns}}
        from {{tableName}}
        where {{primaryKeyColumn}} = #{ {{primaryKeyName}} }
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="{{className}}Map">
        select
{{#columns}}
          {{name}}{{#hasNext}},{{/hasNext}}
{{/columns}}
        from {{tableName}}
        <where>
{{#columns}}
            <if test="{{javaName}} != null{{#stringType}} and {{javaName}} != ''{{/stringType}}">
                and {{name}} = #{ {{javaName}} }
            </if>
{{/columns}}
        </where>
        {{#pagination}}
        limit #{pageable.offset}, #{pageable.pageSize}
        {{/pagination}}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from {{tableName}}
        <where>
{{#columns}}
            <if test="{{javaName}} != null{{#stringType}} and {{javaName}} != ''{{/stringType}}">
                and {{name}} = #{ {{javaName}} }
            </if>
{{/columns}}
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="{{primaryKeyName}}" useGeneratedKeys="true">
        insert into {{tableName}}({{#otherColumns}}{{name}}{{#hasNext}}, {{/hasNext}}{{/otherColumns}})
        values ({{#otherColumns}}#{ {{javaName}} }{{#hasNext}}, {{/hasNext}}{{/otherColumns}})
    </insert>

    <insert id="insertBatch" keyProperty="{{primaryKeyName}}" useGeneratedKeys="true">
        insert into {{tableName}}({{#otherColumns}}{{name}}{{#hasNext}}, {{/hasNext}}{{/otherColumns}})
        values
        <foreach collection="entities" item="entity" separator=",">
        ({{#otherColumns}}#{entity.{{javaName}}}{{#hasNext}}, {{/hasNext}}{{/otherColumns}})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="{{primaryKeyName}}" useGeneratedKeys="true">
        insert into {{tableName}}({{#otherColumns}}{{name}}{{#hasNext}}, {{/hasNext}}{{/otherColumns}})
        values
        <foreach collection="entities" item="entity" separator=",">
            ({{#otherColumns}}#{entity.{{javaName}}}{{#hasNext}}, {{/hasNext}}{{/otherColumns}})
        </foreach>
        on duplicate key update
        {{#otherColumns}}{{name}} = values({{name}}){{#hasNext}},{{/hasNext}}
        {{/otherColumns}}
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update {{tableName}}
        <set>
{{#otherColumns}}
            <if test="{{javaName}} != null{{#stringType}} and {{javaName}} != ''{{/stringType}}">
                {{name}} = #{ {{javaName}} },
            </if>
{{/otherColumns}}
        </set>
        where {{primaryKeyColumn}} = #{ {{primaryKeyName}} }
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from {{tableName}} where {{primaryKeyColumn}} = #{ {{primaryKeyName}} }
    </delete>

</mapper>